/*
 * File: app/view/ListPanel.js
 *
 * This file was generated by Sencha Architect version 3.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CheckOut.view.ListPanel', {
    extend: 'Ext.Panel',
    //alias: 'widget.listpanel',
    id: 'listPanel',
    requires: [
        'Ext.XTemplate', 'CheckOut.view.detailProfile'
    ],

    config: {
        //id: 'listPanel',
        items: [
            {
                xtype: 'titlebar',
                title: 'Recent Updates',
                items: [{
                    xtype: 'button',
                    'text': '< Back',
                    handler: function(){
                        Ext.getCmp('listPanel').hide();
                    }
                }]
            },
            {
                xtype: 'list',
                id: 'listPanelDisplay',
                height: '100%',
                itemTpl: new Ext.XTemplate(
                    '<div>',
                        '<img src="http://graph.facebook.com/{userId}/picture?type=square" height=50 width=50 />',
                        '<div style="margin: -50px 0 0 60px;"><b>{[this.getNameAndMessage(values)]}</b></div>',
                        '<div style="margin: 0 0 0 60px;">{[this.getFormatedDate(values)]}</div>',
                    '</div>',
                    {
                            getNameAndMessage: function(values){
                                if(values.name.length > 1 && values.message.length >1){
                                    return values.name+': '+values.message
                                }else if(values.name.length > 1){
                                    return values.name;
                                }else if(values.message.length >1){
                                    return values.message;
                                }else {
                                    return values.userId;
                                }
                            },
                            getFormatedDate: function(values){
                                var system_date = new Date(Date.parse(values.time));
                                
                                var user_date = new Date();
                                var diff = Math.floor((user_date - system_date) / 1000);
                                if (diff <= 1) {return "just now";}
                                if (diff < 20) {return diff + " seconds ago";}
                                if (diff < 40) {return "half a minute ago";}
                                if (diff < 60) {return "less than a minute ago";}
                                if (diff <= 90) {return "one minute ago";}
                                if (diff <= 3540) {return Math.round(diff / 60) + " minutes ago";}
                                if (diff <= 5400) {return "1 hour ago";}
                                if (diff <= 86400) {return Math.round(diff / 3600) + " hours ago";}
                                if (diff <= 129600) {return "1 day ago";}
                                if (diff < 604800) {return Math.round(diff / 86400) + " days ago";}
                                if (diff <= 777600) {return "1 week ago";}
                                if (diff <= 3110400) {return "1 month ago";}
                                if (diff <= 9331200) {return "3 months ago";}
                                if (diff <= 18662400) {return "6 months ago";}
                                if (diff <= 311040000) {return "1 year ago";}
                                return "on " + system_date;
                        }
                    }
                ),
                store: 'Locations',
                onItemDisclosure: true
            }
        ]
    }

});